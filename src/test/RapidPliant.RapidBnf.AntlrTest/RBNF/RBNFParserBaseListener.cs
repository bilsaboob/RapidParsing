//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\bilsa\AppData\Roaming\RapidEditor\Extensions\Rapid_Extensions_Antlr\code_gen\201802\18\05\51\21_266\RBNFParser.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRBNFParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class RBNFParserBaseListener : IRBNFParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.document"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDocument([NotNull] RBNFParser.DocumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.document"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDocument([NotNull] RBNFParser.DocumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.topStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopStatements([NotNull] RBNFParser.TopStatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.topStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopStatements([NotNull] RBNFParser.TopStatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.topStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopStatement([NotNull] RBNFParser.TopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.topStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopStatement([NotNull] RBNFParser.TopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] RBNFParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] RBNFParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.ruleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleDeclaration([NotNull] RBNFParser.RuleDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.ruleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleDeclaration([NotNull] RBNFParser.RuleDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.ruleAlts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleAlts([NotNull] RBNFParser.RuleAltsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.ruleAlts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleAlts([NotNull] RBNFParser.RuleAltsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] RBNFParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] RBNFParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOp([NotNull] RBNFParser.OpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOp([NotNull] RBNFParser.OpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.refExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRefExpr([NotNull] RBNFParser.RefExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.refExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRefExpr([NotNull] RBNFParser.RefExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.lexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLexExpr([NotNull] RBNFParser.LexExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.lexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLexExpr([NotNull] RBNFParser.LexExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.spellingExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpellingExpr([NotNull] RBNFParser.SpellingExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.spellingExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpellingExpr([NotNull] RBNFParser.SpellingExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.regexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegexExpr([NotNull] RBNFParser.RegexExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.regexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegexExpr([NotNull] RBNFParser.RegexExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.rangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeExpr([NotNull] RBNFParser.RangeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.rangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeExpr([NotNull] RBNFParser.RangeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.groupExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupExpr([NotNull] RBNFParser.GroupExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.groupExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupExpr([NotNull] RBNFParser.GroupExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.path"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPath([NotNull] RBNFParser.PathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.path"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPath([NotNull] RBNFParser.PathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RBNFParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdent([NotNull] RBNFParser.IdentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RBNFParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdent([NotNull] RBNFParser.IdentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
